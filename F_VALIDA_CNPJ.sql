USE [DATASAFE];
GO

/****** Object:  UserDefinedFunction [dbo].[F_VALIDA_CNPJ]    Script Date: 11/02/2025 15:55:14 ******/

SET ANSI_NULLS ON;
GO

SET QUOTED_IDENTIFIER ON;
GO


/*
  AUTOR : ANDREA BIANCHI
  DATA  : 11/02/2025
  PARAMETRO ENTRADA CNPJ
  RETORNA 0 - FALSO   1 - VERDADEIRO

  USO:  
    SELECT DBO.F_VALIDA_CNPJ( '18344996000118' )
    SELECT DBO.F_VALIDA_CNPJ( '18344996000119' )
    SELECT DBO.F_VALIDA_CNPJ( '12ABC34501DE35' ) 


*/

ALTER FUNCTION [dbo].[F_VALIDA_CNPJ](
			@CNPJ VARCHAR(18))
RETURNS INT
AS
	BEGIN

	    --DECLARE @CNPJ VARCHAR(50) = '91.338.731/0001-10'; 

	    --SET NOCOUNT ON;
	    --PRINT 'PARAMETRO ENTRADA --> ' + @CNPJ;
	    --PRINT 'TAMANHO --> ' + CONVERT(VARCHAR(10), LEN(@CNPJ));

	    -- DEIXAR APENAS NUMEROS E LETRAS 
	    DECLARE 
		    @DOC VARCHAR(14) = '';

	    --REMOVER CARACTERES DO DOCUMENTO	    	  
	    WITH SPLIT
		    AS (SELECT 1 AS ID, 
					SUBSTRING(@CNPJ, 1, 1) AS ALGARISMO
			   UNION ALL
			   SELECT ID + 1, 
					SUBSTRING(@CNPJ, ID + 1, 1)
					FROM 
						SPLIT
					WHERE ID < LEN(@CNPJ))
		    SELECT @DOC+=ALGARISMO
				 FROM 
					 SPLIT
				 WHERE ALGARISMO LIKE '[0-9;A-Z]';

	    --PRINT 'DOCUMENTO SEM CARACTERES ESPECIAIS --> ' + @DOC;
 
	    -- variáveis
	    DECLARE 
		    @DOC_LEN                             INT = LEN(@DOC)
		  , @DOC_DIGITO1                         INT = SUBSTRING(@DOC, LEN(@DOC) - 1, 1)
		  , @DOC_DIGITO2                         INT = SUBSTRING(@DOC, LEN(@DOC), 1)
		  , @LOOP_DIGITOS_VERIFICADORES          INT = 1
		  , @POSICAO_PROXIMO_ALGARISMO           INT
		  , @SOMATORIA_ALGARISMOS_X_COEFICIENTES INT
		  , @COEFICIENTE_MULTIPLICADOR           INT
		  , @ALGARISMO                           INT
		  , @RESTO_DIVISAO_INTEIRA               INT
		  , @DIGITO_CALCULADO1                   INT
		  , @DIGITO_CALCULADO2                   INT;


	    --PRINT ' TAMANHO DOC. [0-1][A-Z] ' + CONVERT(VARCHAR(10), @DOC_LEN);
	    --PRINT ' DIG 1 --> ' + CONVERT(VARCHAR(10), @DOC_DIGITO1);
	    --PRINT ' DIG 2 --> ' + CONVERT(VARCHAR(10), @DOC_DIGITO2);

	    -- loop: executa uma validação para cada um dos digitos (começa em 1 termina em 2)
	    WHILE @LOOP_DIGITOS_VERIFICADORES <= 2
	    BEGIN

		   SELECT @SOMATORIA_ALGARISMOS_X_COEFICIENTES = 0, 
				@COEFICIENTE_MULTIPLICADOR = 2, 
				@POSICAO_PROXIMO_ALGARISMO = @DOC_LEN + @LOOP_DIGITOS_VERIFICADORES - 3; 
		 
		 
		   -- loop: Uma repetição para cada algarismo da raiz do cnpj ou cpf
		   WHILE @POSICAO_PROXIMO_ALGARISMO > 0
		   BEGIN

			  --PRINT '-----------------------------------------------------------------';
			  --PRINT '@POSICAO_PROXIMO_ALGARISMO ' + ISNULL(CONVERT(VARCHAR(10), @POSICAO_PROXIMO_ALGARISMO), '');

			  SELECT @ALGARISMO = ASCII(SUBSTRING(@DOC, @POSICAO_PROXIMO_ALGARISMO, 1)) - 48, 
				    @SOMATORIA_ALGARISMOS_X_COEFICIENTES+=@ALGARISMO * @COEFICIENTE_MULTIPLICADOR, 
				    @COEFICIENTE_MULTIPLICADOR = @COEFICIENTE_MULTIPLICADOR + 1, 
				    @POSICAO_PROXIMO_ALGARISMO-=1;


			  /*
			  PRINT '@ALGARISMO                : ' + ISNULL(CONVERT(VARCHAR, @ALGARISMO), '');
			  PRINT '@COEFICIENTE_MULTIPLICADOR: ' + ISNULL(CONVERT(VARCHAR, @COEFICIENTE_MULTIPLICADOR - 1), '');
			  PRINT 'PRODUTO                   : ' + ISNULL(CONVERT(VARCHAR, @ALGARISMO * (@COEFICIENTE_MULTIPLICADOR - 1)), '');
			  PRINT '@SOMATORIA_ALGARISMOS_X_COEFICIENTES (somatória atual): ' + ISNULL(CONVERT(VARCHAR,
			  @SOMATORIA_ALGARISMOS_X_COEFICIENTES), '');
			  */
                     
			  -- Se for um cnpj reinicia a contagem de coeficientes (para cpf continua)
			  IF @DOC_LEN > 11
				AND @COEFICIENTE_MULTIPLICADOR > 9
			  BEGIN
				 SET @COEFICIENTE_MULTIPLICADOR = 2;
			  END;
		   END;
		   --PRINT '====================================================================';
		   --PRINT 'CALCULO DIGITO :' + ISNULL(CONVERT(VARCHAR(10), @LOOP_DIGITOS_VERIFICADORES), '');

		   SET @RESTO_DIVISAO_INTEIRA = 11 - (@SOMATORIA_ALGARISMOS_X_COEFICIENTES % 11);
		   --PRINT '@RESTO_DIVISAO_INTEIRA: ' + ISNULL(CONVERT(VARCHAR, @RESTO_DIVISAO_INTEIRA), '');

		   IF(@RESTO_DIVISAO_INTEIRA = 10)
		   BEGIN
			  SET @RESTO_DIVISAO_INTEIRA = 0;
		   END;

		   IF @LOOP_DIGITOS_VERIFICADORES = 1
		   BEGIN
			  SET @DIGITO_CALCULADO1 = @RESTO_DIVISAO_INTEIRA;
			  --PRINT '@DIGITO_CALCULADO1 ' + CONVERT(VARCHAR(10), @DIGITO_CALCULADO1);
			  IF @DIGITO_CALCULADO1 <> @DOC_DIGITO1
			  BEGIN
				 --PRINT 'CNPJ INVALIDO ';
				 RETURN 0;
			  END;
		   END;
		   ELSE
		   BEGIN
			  SET @DIGITO_CALCULADO2 = @RESTO_DIVISAO_INTEIRA;
			  --PRINT '@DIGITO_CALCULADO2 ' + CONVERT(VARCHAR(10), @DIGITO_CALCULADO2);
		   END;

		   SET @LOOP_DIGITOS_VERIFICADORES+=1;
	    END;

	    --PRINT '@digito_calculado 1 --> ' + ISNULL(CONVERT(VARCHAR(10), @DIGITO_CALCULADO1), '');
	    --PRINT '@digito_calculado 2 --> ' + ISNULL(CONVERT(VARCHAR(10), @DIGITO_CALCULADO2), '');


	    /*
	    IF @DIGITO_CALCULADO1 = @DOC_DIGITO1
		  AND @DIGITO_CALCULADO2 = @DOC_DIGITO2
	    BEGIN
		   PRINT 'CNPJ VALIDO';
	    END;
	    ELSE
	    BEGIN
		   PRINT 'CNPJ INVALIDO ';
	    END;
	    */

	    RETURN(SELECT CASE
					  WHEN @DIGITO_CALCULADO1 = @DOC_DIGITO1
						  AND @DIGITO_CALCULADO2 = @DOC_DIGITO2
					  THEN 1  --VALIDO
				   ELSE 0 --INVALIDO
				   END);
	END;
 
 
 
 
